/*
ID: 100021881
LANG: JAVA
PROG: lgame
*/

// if you want to turn all the debug on, just find and replace "// DEBUG " with nothing

import java.io.*;
import java.util.*;

/**
 * lgame
 */
public class lgame {
    public static void main(String[] args) throws Exception {
        long startTime = System.currentTimeMillis();
        BufferedReader in = new BufferedReader(new FileReader("lgame.in"));
        int[] letters = new int[26];
        char[] str = in.readLine().toCharArray();
        for(char letter : str) {
            letters[letter - 'a']++;
        }
        in.close();
        BufferedReader br = new BufferedReader(new FileReader("lgame.dict"));
        String line = "";
        String[] works = new String[40000];
        works[0] = "";
        int N = 1;
        int max = 0;
        List<String> res = new ArrayList<String>();
        //                        a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z
        int[] values = new int[] {2, 5, 4, 4, 1, 6, 5, 5, 1, 7, 6, 3, 5, 2, 3, 5, 7, 2, 1, 2, 4, 6, 6, 7, 5, 7};
    loop:
        while(!(line = br.readLine()).equals(".")) {
            char[] arr = line.toCharArray();
            int[] l = new int[26];
            if(str.length < arr.length) {
                continue loop;
            }
            for(char c : arr) {
                if(++l[c - 'a'] > letters[c - 'a']) {
                    continue loop;
                }
            }
        loop2:
            for(int i = 0; i < N; i++) {
                int[] temp = l;
                if(str.length < arr.length + works[i].length()) {
                    continue loop2;
                }
                for(char c : works[i].toCharArray()) {
                    if(++temp[c - 'a'] > letters[c - 'a']) {
                        continue loop2;
                    }
                }
                int sum = 0;
                for(int j : temp) {
                    sum += values[j];
                }
                if(sum > max) {
                    res.clear();
                }
                if (sum >= max) {
                    max = sum;
                    res.add(line + (i == 0 ? "" : " ") + works[i]);
                }
            }
            works[N++] = line;
        }
        br.close();
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("lgame.out")));
        out.println(max);
        for(String s : res) {
            out.println(s);
        }
        out.close();
        System.out.println(System.currentTimeMillis() - startTime);
        System.exit(0);
    }
}
