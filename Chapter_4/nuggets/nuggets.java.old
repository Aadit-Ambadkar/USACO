/*
ID: 100021881
LANG: JAVA
PROG: nuggets
*/

import java.io.*;
import java.util.*;

/**
 * find minimum number that cannot be made by adding any subset of an array of components
 * @author  Johan Vonk <johan.d.s.vonk@gmail.com>
 */
public class nuggets {
    public static void main(String[] args) throws Exception {
        long startTime = System.currentTimeMillis();
        BufferedReader br = new BufferedReader(new FileReader("nuggets.in"));
        int N = Integer.parseInt(br.readLine());
        int[] values = br.lines().mapToInt(Integer::parseInt).toArray();
        Arrays.sort(values);
        int limit = Arrays.stream(values).sum();
        Deque<Integer> old = new LinkedList<Integer>();
        old.add(0);
        Set<Integer> set = new HashSet<Integer>();

        for(int k = 0; k < N - 1; k++) {
            for(int i = values.length-1; i>=0; i--) {
                Deque<Integer> newer = new LinkedList<Integer>();

                while(!old.isEmpty()) {
                    int j = old.remove();
                    newer.add(values[i] + j);
                    newer.add(j);
                }

                set.addAll(newer);
                old = new LinkedList<Integer>();
                old.addAll(set);
            }
        }

        int max = 0;

        for(int i = 0; i <= limit; i++) {
            if(!set.contains(i)) {
                max = Math.max(max, i);
            }
        }

        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("nuggets.out")));
        out.println(max);
        out.close();
        System.out.println(System.currentTimeMillis() - startTime);
        System.exit(0);
    }
}
